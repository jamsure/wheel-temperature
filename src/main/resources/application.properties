server.port=9091

mybatis.typeAliasesPackage=com.chaoyang.demo.model
mybatis.mapperLocations=classpath:/mapper/*.xml
#如果在mapper中配置了多个mapper的话，使用以下方法，他回自动进行扫描
#mybatis.mapperLocations=classpath:/mapper/*.xml

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url = jdbc:mysql://127.0.0.1/chaoyangtemp?useUnicode=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.username = root


spring.datasource.password =  yc0528
spring.datasource.driver-class-name = com.mysql.jdbc.Driver

# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall
spring.datasource.logSlowSql=true


#页面热加载
#spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.cache = false
#打印sql语句
logging.level.chaoyang.tempmonitor.mapper=debug

#增加虚拟路径的配置，以通过绝对路径的方式显示图片
spring.http.multipart.location=D://
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/, file:${spring.http.multipart.location}